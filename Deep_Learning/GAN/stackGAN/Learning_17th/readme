1. 실제 이미지와 가짜 이미지를 concatenation 하여 label 과 매칭한 후 무작위로 섞은 입력을 dis 에 넣어 무작위성을 증가
-> d_loss_real:1.124358057975769
   d_loss_fake:1.69888480741065e-05
   d_loss_wrong:0.3633098006248474
   d_loss_wrong2:0.3633098006248474
   에서 보면 dis 가 진짜를 진짜라고 판별하는 능력과 가짜를 가짜라고 판별하는 능력이 높지만,
   섞여있을때 판별하는 능력이 낮으므로 이러한 시도가 타당해 보인다

2. 성능이 좋지 않다면,
 1) 5th 훈련 코드를 더하고(CA 를 통과 o),
 2) 0.9 -> 1 로 real_label 을 바꾸어 볼까?
 3) gen 의 필터 수를 줄이거나, dis 를 더 깊게 하거나, gen 에 Dropout 을 '층마다' 적용해볼까? 
 4) dis 에 noise 를 추가 해 볼까?
 5) dis 와 gen 의 학습률을 다르게 해 볼까?
 6) 이미지 속성값중 Wearing_Necktie, Wearing_Necklace 를 모두 0으로 바꾸어서 넣어볼까? 
 7) Dropout 을 dis 에 사용 해 볼까?
 8) Wasserstein loss 로 바꾸어 볼까?
 9) 옵티마이저를 바꾸어 볼까?
 10) crop 된 이미지의 노이즈를 제거 해 볼까?

>>>>>>> dis 의 성능이 gen 의 성능보다 좋아서 진짜와 가짜를 잘 구별해 낸다면, gen 이 더 빠르게 학습 할수 있는것 아닌가? 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
이게 되려 gen 성능이 좋은게 아니라 나빠서 제대로된 이미지를 생성하지 못하고 있는거라면...?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

*** dis_loss 가 처음에 값이 높다는 것 = dis 가 처음엔 사진이 진짜인지 가짜인지 잘 구별하지 못한다는것
    그러므로, 시간이 지날수록 dis 는 값이 떨어졌다(잘 구별)가 다시 올라가야(잘 못 구별) 함
    왜냐하면, 처음엔 gen 이 fake 이미지를 잘 생성하지 못하기 때문에 dis 가 잘 구별 할 수 있기 때문에
   
    gen_loss 가 처음에 값이 높다는 것 = fake 이미지를 잘 생성하지 못한다는것
    그러므로, 시간이 지날수록 gen 은 값이 떨어져야(fake 이미지를 잘 생성) 함
   
    gen 이 실제와 더 비슷한 fake 이미지를 생성해 낼수록 dis 가 실제와 가짜를 구별하는 능력도 좋아 질 수 있음 = 적대 신경망